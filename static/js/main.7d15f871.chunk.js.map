{"version":3,"sources":["components/layout/Header.js","components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Contact","state","showContactInfo","onDeleteClick","id","deleteContact","this","contact","name","email","phone","onClick","setState","style","cursor","float","color","bind","marginRight","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","addContact","history","push","target","post","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","put","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","NotFound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7d15f871.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../actions/contactActions\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onDeleteClick = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo,\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\",\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const getContacts = () => async (dispatch) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  dispatch({ type: GET_CONTACTS, payload: res.data });\n};\n\nexport const getContact = (id) => async (dispatch) => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n\n  dispatch({ type: GET_CONTACT, payload: res.data });\n};\n\nexport const deleteContact = (id) => async (dispatch) => {\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n  dispatch({ type: DELETE_CONTACT, payload: id });\n};\nexport const addContact = (contact) => async (dispatch) => {\n  const res = await axios.post(\n    `https://jsonplaceholder.typicode.com/users`,\n    contact\n  );\n\n  dispatch({ type: ADD_CONTACT, payload: res.data });\n};\n\nexport const updateContact = (contact) => async (dispatch) => {\n  const res = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n    contact\n  );\n\n  dispatch({ type: UPDATE_CONTACT, payload: res.data });\n};\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map((contact) => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ contacts: state.contact.contacts });\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../actions/contactActions\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContact, updateContact } from \"../../actions/contactActions\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    errors: {},\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone,\n    });\n  }\n\n  componentDidMount() {\n    this.props.getContact(this.props.match.params.id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone,\n    };\n\n    //// UPDATE CONTACT ////\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ contact: state.contact.contact });\n\nexport default connect(mapStateToProps, { getContact, updateContact })(\n  EditContact\n);\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  GET_CONTACTS,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts: [],\n  contact: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state, contacts: action.payload };\n\n    case GET_CONTACT:\n      return { ...state, contact: action.payload };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case ADD_CONTACT:\n      return { ...state, contacts: [...state.contacts, action.payload] };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id == action.payload.id ? action.payload : contact\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport contactReducer from \"./contactReducer\";\n\nexport default combineReducers({\n  contact: contactReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}