{"version":3,"sources":["components/layout/Header.js","components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/hooks/useInput.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Contact","dispatch","useDispatch","useState","showContactInfo","setContactInfo","contact","name","email","id","phone","onClick","style","cursor","float","color","a","axios","delete","type","payload","deleteContact","marginRight","Contacts","contacts","useSelector","state","useEffect","get","res","data","Fragment","map","key","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","initialValue","setValue","reset","bind","event","target","AddContact","useInput","resetName","bindName","resetPhone","bindPhone","resetEmail","bindEmail","errors","setErrors","onSubmit","e","preventDefault","post","history","push","EditContact","setName","setPhone","setEmail","match","params","put","updateContact","initialState","combineReducers","action","filter","middleware","applyMiddleware","thunk","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","App","exact","path","component","About","NotFound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.be22ad8c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../actions/contactActions\";\nimport { useState } from \"react\";\n\nexport default function Contact(props) {\n  const dispatch = useDispatch();\n  const [showContactInfo, setContactInfo] = useState(false);\n  const { name, email, id, phone } = props.contact;\n\n  return (\n    <div className=\"card card-body mb-3\">\n      <h4>\n        {name}{\" \"}\n        <i\n          onClick={() => setContactInfo(!showContactInfo)}\n          className=\"fas fa-sort-down\"\n          style={{ cursor: \"pointer\" }}\n        />\n        <i\n          className=\"fas fa-times\"\n          style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n          onClick={() => dispatch(deleteContact(id))}\n        />\n        <Link to={`contact/edit/${id}`}>\n          <i\n            className=\"fas fa-pencil-alt\"\n            style={{\n              cursor: \"pointer\",\n              float: \"right\",\n              color: \"black\",\n              marginRight: \"1rem\",\n            }}\n          />\n        </Link>\n      </h4>\n      {showContactInfo ? (\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Email: {email}</li>\n          <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n","import {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const getContacts = () => async (dispatch) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  dispatch({ type: GET_CONTACTS, payload: res.data });\n};\n\nexport const getContact = (id) => async (dispatch) => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n\n  dispatch({ type: GET_CONTACT, payload: res.data });\n};\n\nexport const deleteContact = (id) => async (dispatch) => {\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n  dispatch({ type: DELETE_CONTACT, payload: id });\n};\n\nexport const addContact = (contact) => async (dispatch) => {\n  const res = await axios.post(\n    `https://jsonplaceholder.typicode.com/users`,\n    contact\n  );\n\n  dispatch({ type: ADD_CONTACT, payload: res.data });\n};\n\nexport const updateContact = (contact) => async (dispatch) => {\n  const res = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n    contact\n  );\n\n  dispatch({ type: UPDATE_CONTACT, payload: res.data });\n};\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\n","import React, { useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nexport default function Contacts(props) {\n  const contacts = useSelector((state) => state.contact.contacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <h1 className=\"display-4 mb-2\">\n        <span className=\"text-danger\">Contact</span> List\n      </h1>\n      {contacts.map((contact) => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value);\n      },\n    },\n  };\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../actions/contactActions\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport useInput from \"../hooks/useInput\";\n\nexport default function AddContact(props) {\n  const dispatch = useDispatch();\n  const {\n    value: name,\n    setValue: setName,\n    reset: resetName,\n    bind: bindName,\n  } = useInput(\"\");\n  const {\n    value: phone,\n    setValue: setPhone,\n    reset: resetPhone,\n    bind: bindPhone,\n  } = useInput(\"\");\n  const {\n    value: email,\n    setValue: setEmail,\n    reset: resetEmail,\n    bind: bindEmail,\n  } = useInput(\"\");\n  const [errors, setErrors] = useState({});\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Check For Errors\n    if (name === \"\") {\n      setErrors({ ...errors, name: \"Name is required\" });\n      return;\n    }\n\n    if (email === \"\") {\n      setErrors({ ...errors, email: \"Email is required\" });\n      return;\n    }\n\n    if (phone === \"\") {\n      setErrors({ ...errors, phone: \"Phone is required\" });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    //// SUBMIT CONTACT ////\n    dispatch(addContact(newContact));\n\n    // Clear State\n    resetName();\n    resetPhone();\n    resetEmail();\n    setErrors({});\n\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">Add Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={onSubmit}>\n          <TextInputGroup\n            label=\"Name\"\n            name=\"name\"\n            placeholder=\"Enter Name\"\n            {...bindName}\n            error={errors.name}\n          />\n          <TextInputGroup\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            {...bindEmail}\n            error={errors.email}\n          />\n          <TextInputGroup\n            label=\"Phone\"\n            name=\"phone\"\n            placeholder=\"Enter Phone\"\n            {...bindPhone}\n            error={errors.phone}\n          />\n          <input\n            type=\"submit\"\n            value=\"Add Contact\"\n            className=\"btn btn-light btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContact, updateContact } from \"../../actions/contactActions\";\nimport useInput from \"../hooks/useInput\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nexport default function EditContact(props) {\n  const contact = useSelector((state) => state.contact.contact);\n  const dispatch = useDispatch();\n  const {\n    value: name,\n    setValue: setName,\n    reset: resetName,\n    bind: bindName,\n  } = useInput(\"\");\n  const {\n    value: phone,\n    setValue: setPhone,\n    reset: resetPhone,\n    bind: bindPhone,\n  } = useInput(\"\");\n  const {\n    value: email,\n    setValue: setEmail,\n    reset: resetEmail,\n    bind: bindEmail,\n  } = useInput(\"\");\n  const [errors, setErrors] = useState({});\n\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n  //   const { name, email, phone } = nextProps.contact;\n  //   this.setState({\n  //     name,\n  //     email,\n  //     phone,\n  //   });\n  // }\n\n  useEffect(() => {\n    dispatch(getContact(props.match.params.id));\n    setName(contact.name);\n    setPhone(contact.phone);\n    setEmail(contact.email);\n  }, [\n    dispatch,\n    props.match.params.id,\n    setEmail,\n    setName,\n    setPhone,\n    contact.name,\n    contact.phone,\n    contact.email,\n  ]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Check For Errors\n    if (name === \"\") {\n      setErrors({ ...errors, name: \"Name is required\" });\n      return;\n    }\n\n    if (email === \"\") {\n      setErrors({ ...errors, email: \"Email is required\" });\n      return;\n    }\n\n    if (phone === \"\") {\n      setErrors({ ...errors, phone: \"Phone is required\" });\n      return;\n    }\n\n    const { id } = props.match.params;\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone,\n    };\n\n    //// UPDATE CONTACT ////\n    dispatch(updateContact(updContact));\n\n    // Clear State\n    resetName();\n    resetPhone();\n    resetEmail();\n    setErrors({});\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">Edit Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={onSubmit}>\n          <TextInputGroup\n            label=\"Name\"\n            name=\"name\"\n            placeholder=\"Enter Name\"\n            error={errors.name}\n            {...bindName}\n          />\n          <TextInputGroup\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            error={errors.email}\n            {...bindEmail}\n          />\n          <TextInputGroup\n            label=\"Phone\"\n            name=\"phone\"\n            placeholder=\"Enter Phone\"\n            error={errors.phone}\n            {...bindPhone}\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Contact\"\n            className=\"btn btn-light btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  GET_CONTACTS,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts: [],\n  contact: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state, contacts: action.payload };\n\n    case GET_CONTACT:\n      return { ...state, contact: action.payload };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case ADD_CONTACT:\n      return { ...state, contacts: [...state.contacts, action.payload] };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id == action.payload.id ? action.payload : contact\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport contactReducer from \"./contactReducer\";\n\nexport default combineReducers({\n  contact: contactReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = applyMiddleware(thunk);\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, initialState, reduxDevTools(middleware));\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}